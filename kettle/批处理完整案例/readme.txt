在“非正常时段交易”目录内，有完整案例的环境搭建、部署、业务开发的案例。
具体参考目录内的文档。


案例描述，具体细节参考目录内的文档
	本案例模拟“非正常时段交易”规则，分为以下几个模块
	-- 建表
		  shell脚本调用sql脚本，执行数据表创建

	-- 数据处理
          shell脚本调用sql脚本，执行数据处理

	-- 结果取回
	      取回本地



执行过程，具体细节参考目录内的文档
    -- 准备
          1、首先要在MySQL中新建kettle数据库，库中建表batch，向表中存入“作业名字”和“数据日期”，以便在作业中调用
          2、编写数据处理的sql脚本
          
    -- 编写kettle作业
          1、新建数据库连接，连接到“准备”过程中使用的数据库
    	    2、新建转换，在转换中从MySQL获取本次应该执行的数据日期，并设置为环境变量，使用的数据连接为第1步中的连接
          3、新建脚本-shell,在里面写复制文件和调用sql的shell命令，参考《一个具体的脚本.sh》
          4、新建脚本-sql，在执行完成后，把数据日期加1，表示下一次处理的是下一个数据日期的数据，使用的数据连接为第1步中的连接

    -- 执行
          1、拷贝window用户目录下的.kettle中的文件到linux上用户目录下，主要是配置的数据连接信息在这里，
            确保该linux服务器能连接到“准备”过程中存放数据日期的MySQL服务器。
          2、拷贝kettle作业文件和sql文件到linux上
          3、执行kettle作业




附：
	本次开发面临的比较难的问题是如何存储每个作业的数据日期（为什么要存储数据日期？可以控制作业执行，支持重跑、补跑、跳批等操作）
	存储文件的方式太乱且不好维护，所以放到MySQL数据库中